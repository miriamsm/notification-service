name: Deploy Notification Service

on:
  push:
    branches:
      - main
  workflow_dispatch: # allows manual runs

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ Build the project
      - name: Build project
        run: npm run build

      # 5Ô∏è‚É£ Create .env file for Docker
      - name: Create .env file
        run: |
          cat <<EOF > .env
POSTGRES_USER=postgres
POSTGRES_PASSWORD=1234
POSTGRES_DB=notification_service
REDIS_HOST=redis
REDIS_PORT=6379
API_PORT=3000
SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}
TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}
EOF

      # 6Ô∏è‚É£ Run Docker Compose
      - name: Run Docker Compose
        run: |
          docker compose down
          docker compose up --build -d

      # 7Ô∏è‚É£ Wait a few seconds for containers to initialize
      - name: Wait for services
        run: sleep 10

      # 8Ô∏è‚É£ Check running containers
      - name: Check running containers
        run: docker ps

      # 9Ô∏è‚É£ Optional: Check API health
      - name: Verify API health
        run: |
          curl -f http://localhost:3000/api/notifications/health || exit 1

      # üîü Optional: Test creating a notification
      - name: Test notification
        run: |
          curl -X POST http://localhost:3000/api/notifications \
            -H "Content-Type: application/json" \
            -d '{
              "user_id": "123",
              "channel": "email",
              "template": "welcome_email",
              "data": {
                "name": "John Doe",
                "app_name": "MyApp",
                "link": "https://example.com"
              }
            }'

      # 1Ô∏è‚É£1Ô∏è‚É£ Optional: Check a notification status
      - name: Check notification status
        run: |
          echo "Replace <notification_id> with the actual ID returned from previous step"
          echo "Example:"
          echo "curl http://localhost:3000/api/notifications/<notification_id>"

      # 1Ô∏è‚É£2Ô∏è‚É£ Optional: Check queue stats
      - name: Check queue stats
        run: curl http://localhost:3000/api/notifications/stats/queue
